# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Driver {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  licenseNumber: String!
  averageRating: Float!
  availability: Boolean!
  createdAt: String!
  updatedAt: String!
  trips: [Trip!]
  state: Boolean!
}

type Trip {
  id: Int!
  driver: Driver!
  user: User!
  origin: String!
  destination: String!
  startDateTime: DateTime!
  endDateTime: DateTime
  distance: Float!
  fare: Float!
  status: TripStatus!
  createdAt: String!
  updatedAt: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum TripStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

type User {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  registrationDate: String!
  location: String
  averageRating: Float
  status: UserStatus!
  createdAt: String!
  updatedAt: String!
  trips: [Trip!]
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

type UserAuthResponse {
  token: String!
  user: User!
}

type DriverAuthResponse {
  token: String!
  driver: Driver!
}

type Query {
  users: [User!]!
  user(id: Int!): User
  drivers: [Driver!]!
  driver(id: Int!): Driver
}

type Mutation {
  loginUser(email: String!, password: String!): UserAuthResponse!
  createUser(createUserData: CreateUserInput!): UserAuthResponse!
  updateUser(updateUserData: UpdateUserInput!): User!
  removeUser(id: Int!): Boolean!
  loginDriver(email: String!, password: String!): DriverAuthResponse!
  createDriver(createDriverData: CreateDriverInput!): DriverAuthResponse!
  updateDriver(updateDriverData: UpdateDriverInput!): Driver!
  removeDriver(id: Int!): Boolean!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phoneNumber: String!
  location: String
  averageRating: Float = 0
  status: UserStatus! = ACTIVE
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  password: String
  phoneNumber: String
  location: String
  averageRating: Float
  status: UserStatus
  id: Int!
}

input CreateDriverInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phoneNumber: String!
  licenseNumber: String!
  averageRating: Float! = 0
  availability: Boolean! = false
}

input UpdateDriverInput {
  firstName: String
  lastName: String
  email: String
  password: String
  phoneNumber: String
  licenseNumber: String
  averageRating: Float
  availability: Boolean
  id: Int!
}
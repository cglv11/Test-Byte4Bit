name: NestJS AWS Lambda CI/CD

on:
  push:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Serverless AWS Authentication
        run: sls config credentials --provider aws --key ${{ secrets.AWS_KEY }} --secret ${{ secrets.AWS_SECRET }}

      - name: Deploy to AWS Lambda
        env:
          SECRETORPRIVATEKEY: ${{ secrets.SECRETORPRIVATEKEY }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_DATABASE: ${{ secrets.DATABASE_DATABASE }}
          PROJECT_ENVIRONMENT: ${{ secrets.PROJECT_ENVIRONMENT }}
        run: sls deploy --stage prod --region us-west-2 --verbose
